name: 'Reaction Commerce API'

# on:
#   push:
#     branches:
#       - main

on: push

env:
  APP_NAME: 'reaction-api'
  DOCKER_REGISTRY: '585876057296.dkr.ecr.eu-central-1.amazonaws.com'

jobs:
  buildPushDocker:
    name: 'Docker Build and Push'
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Generate a short SHA
        run: echo "SHORT_SHA=$(git rev-parse --short ${{ github.event.head_commit.id }})" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # - name: Set Release Version
      #   if: contains(github.event.head_commit.message, 'release:')
      #   run: echo "VERSION_NUMBER=$(echo '${{github.event.head_commit.message}}' | grep -oEh '[0-9]+\.[0-9]+\.[0-9]+(-[a-z]+(\.[0-9]+)?)?')" >> $GITHUB_ENV

      # - name: Create Github Release
      #   if: contains(github.event.head_commit.message, 'release:')
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: '@inno/${{ env.APP_NAME }}@${{ env.VERSION_NUMBER }}'
      #     release_name: QuoteDB Worker Release v${{ env.VERSION_NUMBER }}
      #     prerelease: true

      - name: Build Image
        run: |
          docker build --tag ${{ env.APP_NAME }} ./agency-info
      - name: Tag Image with latest
        run: |
          docker tag ${{ env.APP_NAME }} ${{ env.DOCKER_REGISTRY }}/${{ env.APP_NAME }}:latest
      - name: Tag Image with SHA
        run: |
          docker tag ${{ env.APP_NAME }} ${{ env.DOCKER_REGISTRY }}/${{ env.APP_NAME }}:${{ env.SHORT_SHA }}
      - name: Tag Image with version
        if: contains(github.event.head_commit.message, 'release:')
        run: |
          docker tag ${{ env.APP_NAME }} ${{ env.DOCKER_REGISTRY }}/${{ env.APP_NAME }}:${{ env.VERSION_NUMBER }}
      - name: Push Images
        run: |
          docker push ${{ env.DOCKER_REGISTRY }}/${{ env.APP_NAME }} --all-tags
